#N struct NC-stick float x float y;
#N struct IR-blobs float x float y symbol s;
#N struct CL-L-stick float x float y;
#N struct CL-R-stick float x float y;
#N canvas 0 47 1280 650 10;
#X msg 207 -1295 disconnect;
#X msg 132 -1295 discover;
#X obj 218 -1188 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 140 -1188 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X msg 218 -1158 reportAcceleration \$1;
#X msg 140 -1158 reportIR \$1;
#N canvas 25 33 700 644 \$0-accelerometer-stuff 0;
#X obj 218 12 inlet;
#X obj 366 221 unpack 0 0 0;
#X obj 92 612 expr sqrt(pow($f1 \, 2) + pow($f2 \, 2) + pow($f3 \,
2));
#X obj 357 280 atan;
#X obj 357 259 expr $f1 / $f2;
#X obj 389 304 expr if ($f1 > 0 \, 3.14159 \, -3.14159);
#X obj 357 331 pack 0 0 0;
#X obj 357 353 expr if ($f3 <= 0 \, $f1 + $f2 \, $f1);
#X obj 357 375 * -1;
#X obj 328 61 unpack 0 0 0;
#X obj 42 443 s \$0-wii-pitch-set;
#X obj 357 445 s \$0-wii-roll-set;
#X obj 407 81 s \$0-wii-accZ-set;
#X obj 367 100 s \$0-wii-accY-set;
#X obj 328 119 s \$0-wii-accX-set;
#X text 75 514 The pitch and roll are only accurate if there are no
extra accelerations due to hand movement. We can check if the total
acceleration is close to gravity and only use pitch and roll in that
case. The total acceleration is given by:;
#X text 340 39 raw accerlation:;
#X obj 31 221 unpack 0 0 0;
#X obj 42 280 atan;
#X obj 42 259 expr $f1 / $f2;
#X obj 74 304 expr if ($f1 > 0 \, 3.14159 \, -3.14159);
#X obj 42 331 pack 0 0 0;
#X obj 42 353 expr if ($f3 <= 0 \, $f1 + $f2 \, $f1);
#X obj 42 375 * -1;
#X obj 225 578 unpack 0 0 0;
#X connect 0 0 9 0;
#X connect 0 0 17 0;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 0 5 0;
#X connect 1 2 4 1;
#X connect 1 2 6 2;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 9 0 14 0;
#X connect 9 1 13 0;
#X connect 9 2 12 0;
#X connect 17 1 19 0;
#X connect 17 1 20 0;
#X connect 17 2 19 1;
#X connect 17 2 21 2;
#X connect 18 0 21 0;
#X connect 19 0 18 0;
#X connect 20 0 21 1;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 10 0;
#X connect 24 0 2 0;
#X connect 24 1 2 1;
#X connect 24 2 2 2;
#X restore 75 -891 pd \$0-accelerometer-stuff;
#N canvas 0 0 652 563 \$0-IR-stuff 0;
#X obj 134 18 inlet;
#X obj 122 510 pointer;
#X msg 122 488 traverse pd-IR-data \, next;
#X obj 134 63 route 0 1 2 3;
#X obj 23 482 unpack 0 0 0;
#X floatatom 483 44 5 0 0 0 IR-Blob: - -, f 5;
#X floatatom 522 44 5 0 0 0 - - -, f 5;
#X floatatom 562 44 5 0 0 0 - - -, f 5;
#X obj 15 533 set IR-blobs x y;
#X obj 231 400 pointer;
#X obj 132 372 unpack 0 0 0;
#X obj 124 423 set IR-blobs x y;
#X msg 231 378 traverse pd-IR-data \, next \, next;
#X obj 231 357 loadbang;
#X obj 122 467 loadbang;
#X obj 320 289 pointer;
#X obj 221 261 unpack 0 0 0;
#X obj 213 312 set IR-blobs x y;
#X obj 320 246 loadbang;
#X msg 320 267 traverse pd-IR-data \, next \, next \, next;
#X obj 380 177 pointer;
#X obj 281 149 unpack 0 0 0;
#X obj 273 200 set IR-blobs x y;
#X obj 380 134 loadbang;
#X msg 380 155 traverse pd-IR-data \, next \, next \, next \, next
;
#X connect 0 0 3 0;
#X connect 1 0 8 2;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 3 1 10 0;
#X connect 3 2 16 0;
#X connect 3 3 21 0;
#X connect 4 0 8 0;
#X connect 4 1 8 1;
#X connect 9 0 11 2;
#X connect 10 0 11 0;
#X connect 10 1 11 1;
#X connect 12 0 9 0;
#X connect 13 0 12 0;
#X connect 14 0 2 0;
#X connect 15 0 17 2;
#X connect 16 0 17 0;
#X connect 16 1 17 1;
#X connect 18 0 19 0;
#X connect 19 0 15 0;
#X connect 20 0 22 2;
#X connect 21 0 22 0;
#X connect 21 1 22 1;
#X connect 23 0 24 0;
#X connect 24 0 20 0;
#X restore 105 -912 pd \$0-IR-stuff;
#X text 307 -1299 <- Or you can try to automatically detect a wiimote.
;
#X obj 356 -1188 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#N canvas 5 162 920 244 \$0-nunchuck-stuff 0;
#X obj 559 61 inlet;
#X obj 672 134 pointer;
#X obj 672 91 loadbang;
#X obj 559 96 unpack 0 0;
#X obj 657 177 set NC-stick x y;
#X obj 49 71 inlet;
#X text 42 32 inlet #1: BUTTONS;
#X text 294 35 inlet #2: ACCELERATION;
#X obj 304 72 inlet;
#X obj 304 105 unpack 0 0 0;
#X obj 383 125 s \$0-nc-accZ-set;
#X obj 343 144 s \$0-nc-accY-set;
#X obj 304 163 s \$0-nc-accX-set;
#X text 567 32 inlet #3: STICK;
#X obj 49 117 s \$0-nc-btn-set;
#X msg 672 112 traverse pd-NC-data \, next;
#X floatatom 513 157 4 0 0 0 - - -, f 4;
#X floatatom 599 157 5 0 0 0 - - -, f 5;
#X obj 513 192 outlet;
#X obj 599 192 outlet;
#X connect 0 0 3 0;
#X connect 1 0 4 2;
#X connect 2 0 15 0;
#X connect 3 0 4 0;
#X connect 3 0 16 0;
#X connect 3 1 4 1;
#X connect 3 1 17 0;
#X connect 5 0 14 0;
#X connect 8 0 9 0;
#X connect 9 0 12 0;
#X connect 9 1 11 0;
#X connect 9 2 10 0;
#X connect 15 0 1 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X restore 134 -933 pd \$0-nunchuck-stuff;
#X obj 610 -968 cnv 15 275 241 empty empty Expansion: 10 15 0 14 -228992
-355 0;
#X floatatom 749 -906 7 0 0 1 - #0-nc-accX-set #0-nc-accX, f 7;
#X floatatom 749 -892 7 0 0 1 - #0-nc-accY-set #0-nc-accY, f 7;
#X floatatom 749 -878 7 0 0 1 - #0-nc-accZ-set #0-nc-accZ, f 7;
#X obj 619 -906 hsl 128 14 -1 1 0 0 \$0-nc-accX \$0-nc-accX-set X 4
8 0 10 -261681 -1 -1 12319 1;
#X obj 619 -892 hsl 128 14 -1 1 0 0 \$0-nc-accY \$0-nc-accY-set Y 4
8 0 10 -261681 -1 -1 4445 1;
#X obj 619 -878 hsl 128 14 -1 1 0 0 \$0-nc-accZ \$0-nc-accZ-set Z 4
8 0 10 -261681 -1 -1 7449 1;
#X obj 754 -844 nbx 3 16 -1e+37 1e+37 0 0 empty \$0-nc-btn-set empty
-80 8 0 10 -261681 -1 -1 0 256 0;
#X text 615 -922 Acceleration:;
#N canvas 154 209 610 221 NC-stick 0;
#X obj 39 34 struct NC-stick float x float y;
#X obj 44 71 filledpolygon 900 20 0 5 -5 0 -20 -5 -5 -20 0 -5 5 0 20
5 5 20 0;
#X restore 799 -826 pd NC-stick;
#X text 745 -862 Buttons:;
#X text 816 -922 Stick:;
#X obj 610 -1369 cnv 15 275 400 empty empty Wiimote: -43 6 0 14 -261689
-143491 0;
#X floatatom 773 -1294 7 0 0 1 _X #0-wii-accX-set #0-wii-accX, f 7
;
#X floatatom 773 -1280 7 0 0 1 _Y #0-wii-accY-set #0-wii-accY, f 7
;
#X floatatom 773 -1266 7 0 0 1 _Z #0-wii-accZ-set #0-wii-accZ, f 7
;
#X obj 643 -1294 hsl 128 14 -1 1 0 0 \$0-wii-accX \$0-wii-accX-set
empty -2 -8 0 10 -225271 -1 -1 12446 1;
#X obj 643 -1280 hsl 128 14 -1 1 0 0 \$0-wii-accY \$0-wii-accY-set
empty -2 -8 0 10 -225271 -1 -1 4826 1;
#X obj 643 -1266 hsl 128 14 -1 1 0 0 \$0-wii-accZ \$0-wii-accZ-set
empty -2 -8 0 10 -225271 -1 -1 7620 1;
#N canvas 506 128 481 416 IR-data 0;
#X scalar IR-blobs 262.603 259.077 blob1 \;;
#X scalar IR-blobs 383.441 388.308 blob2 \;;
#X scalar IR-blobs 623.665 511.615 blob3 \;;
#X scalar IR-blobs 821.362 457.231 blob4 \;;
#X coords 0 0 1024 768 256 196 1;
#X restore 621 -1191 pd IR-data;
#N canvas 136 244 342 204 IR-blobs 0;
#X obj 39 34 struct IR-blobs float x float y symbol s;
#X obj 39 71 filledcurve 9 30 0 0 -30 -30 0 0 30 30 0;
#X obj 64 105 drawsymbol s -35 -75 0 24;
#X restore 807 -990 pd IR-blobs;
#X text 679 -1208 IR Blobs (1024x768):;
#X floatatom 773 -1246 7 0 0 1 _PITCH #0-wii-pitch-set #0-wii-pitch
, f 7;
#X obj 643 -1246 hsl 128 14 -3.14156 3.14159 0 0 \$0-wii-pitch \$0-wii-pitch-set
empty -2 -8 0 10 -225280 -1 -1 8121 1;
#X floatatom 773 -1232 7 0 0 1 _ROLL #0-wii-roll-set #0-wii-roll,
f 7;
#X obj 643 -1232 hsl 128 14 -3.14156 3.14159 0 0 \$0-wii-roll \$0-wii-roll-set
empty -2 -8 0 10 -225280 -1 -1 3590 1;
#X text 639 -1310 Acceleration (-1 to 1):;
#X obj 636 -1347 nbx 2 16 -1e+37 1e+37 0 0 empty \$0-wii-btn01-set
empty -100 10 0 12 -225280 -1 -1 0 256 0;
#X obj 671 -1347 nbx 2 16 -1e+37 1e+37 0 0 empty \$0-wii-btn02-set
empty 0 10 0 12 -225280 -1 -1 0 256 0;
#N canvas 0 0 330 216 \$0-button-stuff 0;
#X obj 41 33 inlet;
#X obj 41 86 unpack 0 0;
#X obj 41 140 s \$0-wii-btn01-set;
#X obj 106 120 s \$0-wii-btn02-set;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X restore 49 -871 pd \$0-button-stuff;
#X text 640 -1365 Buttons:;
#N canvas 185 133 481 416 NC-data 0;
#X scalar NC-stick 127 134 \;;
#X coords 0 256 256 0 80 80 1 0 0;
#X restore 799 -906 pd NC-data;
#X obj 46 -1171 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X text 29 -1120 Enable metro to get accelerometer uppdates;
#X obj 148 -1009 disis_wiimote;
#X obj 262 -1041 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X text 243 -1017 connection;
#X text 248 -1007 indicator;
#X text 309 -910 TO CONNECT:;
#X text 310 -898 1 click on connect or discover;
#X text 310 -847 3 upon connect wiimote will vibrate;
#X text 321 -836 if wiimote fails to connect check;
#X text 322 -814 (e.g. using shell command "hcitool scan");
#X obj 454 -1134 cnv 15 150 150 empty empty Feedback 6 12 0 10 -233017
-66577 0;
#X obj 510 -1038 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X msg 510 -1008 setRumble \$1;
#X msg 509 -1061 setLED \$1;
#X obj 509 -1110 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 532 -1110 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 555 -1110 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 578 -1110 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 471 -1111 LEDs:;
#N canvas 0 0 409 401 bytemask 0;
#X obj 269 332 outlet;
#X obj 269 279 float;
#X obj 318 183 |;
#X obj 110 239 -;
#X obj 110 204 float;
#X obj 110 184 trigger bang float;
#X obj 231 204 &;
#X obj 183 142 route 0 1;
#X msg 36 56 \$1 1;
#X msg 106 56 \$1 2;
#X msg 176 56 \$1 4;
#X msg 246 56 \$1 8;
#X obj 36 15 inlet;
#X obj 106 15 inlet;
#X obj 176 15 inlet;
#X obj 246 15 inlet;
#X obj 36 35 change;
#X obj 106 35 change;
#X obj 176 35 change;
#X obj 246 35 change;
#X connect 1 0 2 1;
#X connect 1 0 4 1;
#X connect 1 0 6 1;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 5 1 6 0;
#X connect 6 0 3 1;
#X connect 7 0 5 0;
#X connect 7 1 2 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 16 0;
#X connect 13 0 17 0;
#X connect 14 0 18 0;
#X connect 15 0 19 0;
#X connect 16 0 8 0;
#X connect 17 0 9 0;
#X connect 18 0 10 0;
#X connect 19 0 11 0;
#X restore 509 -1084 pd bytemask, f 12;
#X text 461 -1037 RUMBLE:;
#X text 310 -802 4 start metro and enable "reportAcceleration";
#X text 29 -1080 NB: setting metro below 20 makes little sense as even
at max rate I was unable to get more than 50 updates/second from the
bluetooth stack.;
#X text 27 -1109 (buttons \, xyz wiimote \, xyz nunchuk \, ir).;
#X obj 615 -819 unpack 0 0 0;
#X obj 688 -796 hsl 180 15 0 16000 0 0 empty empty empty -2 -8 0 10
-261681 -1 -1 0 1;
#X obj 688 -781 hsl 180 15 0 16000 0 0 empty empty empty -2 -8 0 10
-261681 -1 -1 0 1;
#X obj 688 -766 hsl 180 15 0 16000 0 0 empty empty empty -2 -8 0 10
-261681 -1 -1 0 1;
#X text 690 -798 up/down;
#X text 689 -768 left/right;
#X text 689 -783 rotate around y axis (wrist);
#X text 310 -791 5 connect nunchuk and enable "reportExtension";
#X text 625 -935 NUNCHUK;
#X text 649 -837 MOTION PLUS;
#X text 17 -1372 Threaded implementation of Wiimote object by DISIS
& L2Ork by Ivica Ico Bukvic <ico@vt.edu> <http://disis.music.vt.edu>
<http://l2ork.music.vt.edu>;
#X text 150 -1252 By default \, the wiimote does not report acceleration
data \, IR data \, or any data from an attached extension (eg \, nunchuck).
You must specifically enable each reporting mode.;
#X msg 356 -1158 reportExpansion \$1;
#N canvas 0 0 1143 249 unpack_messages 0;
#X obj 181 15 inlet;
#X obj 61 103 outlet;
#X obj 105 103 outlet;
#X obj 195 171 outlet;
#X obj 256 171 outlet;
#X obj 317 171 outlet;
#X obj 195 148 route button acceleration stick;
#X obj 390 148 route angle_rate low_speed;
#X obj 390 171 outlet;
#X obj 466 171 outlet;
#X obj 555 171 outlet;
#X obj 624 171 outlet;
#X obj 693 171 outlet;
#X obj 840 171 outlet;
#X obj 912 171 outlet;
#X obj 985 171 outlet;
#X obj 1058 171 outlet;
#X obj 1142 148 outlet;
#X obj 840 148 route right_top right_bottom left_top left_bottom;
#X obj 181 37 route button acceleration ir nunchuk motionplus classic
balance battery;
#X obj 149 103 outlet;
#X obj 555 148 route left_stick right_stick button;
#X connect 0 0 19 0;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 5 0;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X connect 18 0 13 0;
#X connect 18 1 14 0;
#X connect 18 2 15 0;
#X connect 18 3 16 0;
#X connect 19 0 1 0;
#X connect 19 1 2 0;
#X connect 19 2 20 0;
#X connect 19 3 6 0;
#X connect 19 4 7 0;
#X connect 19 5 21 0;
#X connect 19 6 18 0;
#X connect 19 7 17 0;
#X connect 21 0 10 0;
#X connect 21 1 11 0;
#X connect 21 2 12 0;
#X restore 144 -985 pd unpack_messages;
#X text 270 -1326 <- You can connect to a specific address;
#X msg 37 -1008 status;
#X msg 37 -1030 debug;
#X floatatom 348 -965 5 0 0 0 - - -, f 5;
#X floatatom 348 -947 5 0 0 0 - - -, f 5;
#X floatatom 314 -965 5 0 0 0 - - -, f 5;
#X floatatom 314 -947 5 0 0 0 - - -, f 5;
#X floatatom 422 -967 5 0 0 0 - - -, f 5;
#X text 294 -933 balance board (kg);
#X text 456 -974 battery level;
#X text 454 -962 (click on the status msg);
#X obj 422 -946 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 476 -1188 tgl 25 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X msg 476 -1158 togglePassthrough \$1;
#X obj 46 -1140 metro 100;
#X text 322 -825 console and your bluetooth settings;
#N canvas 35 30 815 233 \$0-classic 0;
#X obj 60 -19 inlet;
#X obj 690 -17 inlet;
#X text 47 -37 left stick;
#X text 340 -37 right stick;
#X text 684 -35 buttons;
#N canvas 154 209 610 221 CL-L-stick 0;
#X obj 39 34 struct CL-L-stick float x float y;
#X obj 44 71 filledpolygon 900 8 0 2 -2 0 -8 -2 -2 -8 0 -2 2 0 8 2
2 8 0;
#X restore 59 173 pd CL-L-stick;
#N canvas 185 133 481 416 CL-L-data 0;
#X scalar CL-L-stick 32 30 \;;
#X coords 0 60 60 0 80 80 1 0 0;
#X restore 60 93 pd CL-L-data;
#X obj 165 46 pointer;
#X obj 165 3 loadbang;
#X obj 60 47 unpack 0 0;
#X obj 60 69 set CL-L-stick x y;
#X msg 165 24 traverse pd-CL-L-data \, next;
#X obj 357 -17 inlet;
#X obj 462 47 pointer;
#X obj 462 4 loadbang;
#X obj 357 48 unpack 0 0;
#X msg 462 25 traverse pd-CL-R-data \, next;
#X obj 357 70 set CL-R-stick x y;
#N canvas 476 329 610 221 CL-R-stick 0;
#X obj 39 34 struct CL-R-stick float x float y;
#X obj 44 71 filledpolygon 900 4 0 1 -1 0 -4 -1 -1 -4 0 -1 1 0 4 1
1 4 0;
#X restore 356 174 pd CL-R-stick;
#X obj 690 3 unpack 0 0;
#X floatatom 690 25 5 0 0 0 - - -, f 5;
#X floatatom 747 25 5 0 0 0 - - -, f 5;
#N canvas 185 133 481 416 CL-R-data 0;
#X scalar CL-R-stick 15 15 \;;
#X coords 0 30 30 0 80 80 1 0 0;
#X restore 357 94 pd CL-R-data;
#X connect 0 0 9 0;
#X connect 1 0 19 0;
#X connect 7 0 10 2;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 11 0 7 0;
#X connect 12 0 15 0;
#X connect 13 0 17 2;
#X connect 14 0 16 0;
#X connect 15 0 17 0;
#X connect 15 1 17 1;
#X connect 16 0 13 0;
#X connect 19 0 20 0;
#X connect 19 1 21 0;
#X restore 210 -955 pd \$0-classic;
#X text 310 -887 2 press 1&2 on the wiimote;
#X obj 323 -870 cnv 15 279 28 empty empty empty 20 12 0 14 -259090
-66577 0;
#X text 323 -872 IMPORTANT! to connect new wiimoteplus you mustすe
the pair button isnide the battery pack;
#X obj 57 -1322 inlet;
#X obj 132 -1322 inlet;
#X msg 57 -1295 connect \$1;
#X obj 636 -1326 outlet;
#X obj 682 -1327 outlet;
#X floatatom 739 -1348 7 0 0 1 _X #0-wii-accX-set -, f 7;
#X floatatom 799 -1348 7 0 0 1 _Y #0-wii-accY-set -, f 7;
#X floatatom 859 -1348 7 0 0 1 _Z #0-wii-accZ-set -, f 7;
#X floatatom 919 -1348 7 0 0 1 _PITCH #0-wii-pitch-set -, f 7;
#X floatatom 979 -1348 7 0 0 1 _ROLL #0-wii-roll-set -, f 7;
#X obj 739 -1327 outlet;
#X obj 799 -1327 outlet;
#X obj 859 -1327 outlet;
#X obj 919 -1327 outlet;
#X obj 979 -1327 outlet;
#X floatatom 1098 -1302 7 0 0 1 Acceleration-y #0-nc-accY-set -, f
7;
#X floatatom 1165 -1275 7 0 0 1 Acceleration-z #0-nc-accZ-set -, f
7;
#X floatatom 1041 -1348 7 0 0 1 Acceleration-X #0-nc-accX-set -, f
7;
#X obj 1041 -1327 outlet;
#X obj 1098 -1281 outlet;
#X obj 1165 -1254 outlet;
#X obj 1239 -1346 nbx 3 16 -1e+37 1e+37 0 0 empty \$0-nc-btn-set Nunchuck-buttons
-99 8 0 10 -261681 -1 -1 0 256 0;
#X obj 1239 -1325 outlet;
#X obj 1403 -1355 unpack 0 0 0;
#X floatatom 1403 -1333 5 0 0 0 - - -, f 5;
#X floatatom 1448 -1333 5 0 0 0 - - -, f 5;
#X floatatom 1493 -1333 5 0 0 0 - - -, f 5;
#X obj 1403 -1312 outlet;
#X obj 1448 -1312 outlet;
#X obj 1493 -1312 outlet;
#X obj 207 -1322 inlet;
#X obj 1300 -1318 outlet;
#X obj 1345 -1318 outlet;
#X text 1296 -1347 Nunchuck Analog;
#X obj 528 -1263 inlet;
#X obj 529 -1226 route 0 1 2 3;
#X obj 591 -1262 inlet;
#X connect 0 0 45 0;
#X connect 1 0 45 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 45 0;
#X connect 5 0 45 0;
#X connect 9 0 80 0;
#X connect 10 0 133 0;
#X connect 10 1 134 0;
#X connect 38 0 105 0;
#X connect 39 0 106 0;
#X connect 43 0 96 0;
#X connect 45 0 81 0;
#X connect 45 1 46 0;
#X connect 46 0 2 0;
#X connect 46 0 94 0;
#X connect 46 0 9 0;
#X connect 46 0 3 0;
#X connect 46 0 43 0;
#X connect 55 0 56 0;
#X connect 56 0 45 0;
#X connect 57 0 45 0;
#X connect 58 0 63 0;
#X connect 59 0 63 1;
#X connect 60 0 63 2;
#X connect 61 0 63 3;
#X connect 63 0 57 0;
#X connect 68 0 69 0;
#X connect 68 1 70 0;
#X connect 68 2 71 0;
#X connect 80 0 45 0;
#X connect 81 0 40 0;
#X connect 81 1 6 0;
#X connect 81 2 7 0;
#X connect 81 3 10 0;
#X connect 81 4 10 1;
#X connect 81 5 10 2;
#X connect 81 6 68 0;
#X connect 81 6 125 0;
#X connect 81 8 98 0;
#X connect 81 9 98 1;
#X connect 81 10 98 2;
#X connect 81 11 85 0;
#X connect 81 12 86 0;
#X connect 81 13 87 0;
#X connect 81 14 88 0;
#X connect 81 15 89 0;
#X connect 83 0 45 0;
#X connect 84 0 45 0;
#X connect 89 0 93 0;
#X connect 94 0 95 0;
#X connect 95 0 45 0;
#X connect 96 0 45 0;
#X connect 102 0 104 0;
#X connect 103 0 1 0;
#X connect 104 0 45 0;
#X connect 107 0 112 0;
#X connect 108 0 113 0;
#X connect 109 0 114 0;
#X connect 110 0 115 0;
#X connect 111 0 116 0;
#X connect 117 0 121 0;
#X connect 118 0 122 0;
#X connect 119 0 120 0;
#X connect 123 0 124 0;
#X connect 125 0 126 0;
#X connect 125 1 127 0;
#X connect 125 2 128 0;
#X connect 126 0 129 0;
#X connect 127 0 130 0;
#X connect 128 0 131 0;
#X connect 132 0 0 0;
#X connect 136 0 137 0;
#X connect 137 0 58 0;
#X connect 137 1 59 0;
#X connect 137 2 60 0;
#X connect 137 3 61 0;
#X connect 138 0 55 0;
